#include <stdio.h>
#include <stdlib.h>

#define MAX_FILES 10
#define BLOCK_SIZE 512

typedef struct {
    int block_number;
    char data[BLOCK_SIZE];
} Block;

typedef struct {
    Block blocks[MAX_FILES];
    int index[MAX_FILES];
    int file_count;
} FileSystem;

void allocate_file(FileSystem *fs, int file_index, const char *data) {
    if (file_index < 0 || file_index >= MAX_FILES) {
        printf("Invalid file index.\n");
        return;
    }
    fs->blocks[file_index].block_number = file_index;
    snprintf(fs->blocks[file_index].data, BLOCK_SIZE, "%s", data);
    fs->index[file_index] = file_index;
    fs->file_count++;
}

void display_files(FileSystem *fs) {
    for (int i = 0; i < fs->file_count; i++) {
        printf("File %d: %s\n", fs->blocks[i].block_number, fs->blocks[i].data);
    }
}

int main() {
    FileSystem fs = { .file_count = 0 };
    allocate_file(&fs, 0, "File 0 Data");
    allocate_file(&fs, 1, "File 1 Data");
    display_files(&fs);
    return 0;
}
